{"name":"MultilayerPerceptronClassifier - WineQuality","uuid":"4d259611-fff5-45f1-895f-4f416be08b4d","category":"Prediction - Classification","nodes":[{"id":"1","name":"ReadCSV","description":"It reads in CSV files and creates a DataFrame from it","details":"","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetCSV","x":"35.25px","y":"374px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/wine-data/winequality.csv","widget":"textfield","title":"Path","description":"Path of the Text file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"separator","value":";","widget":"textfield","title":"Separator","description":"CSV Separator","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"true","widget":"array","title":"Header","description":"Does the file have a header row","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"dropMalformed","value":"true","widget":"array","title":"Drop Malformed","description":"Whether to drop Malformed records or error","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"fixed_acidity\",\"volatile_acidity\",\"citric_acid\",\"residual_sugar\",\"chlorides\",\"free_sulfur_dioxide\",\"total_sulfur_dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality\"]","widget":"schema_col_names","title":"Column Names for the CSV","description":"New Output Columns of the SQL","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\"]","widget":"schema_col_types","title":"Column Types for the CSV","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Column Formats for the CSV","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"3","name":"VectorAssembler","description":"Merges multiple columns into a vector column","details":"","examples":"","type":"ml-transformer","nodeClass":"fire.nodes.ml.NodeVectorAssembler","x":"376.25px","y":"384px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"fixed_acidity\",\"volatile_acidity\",\"citric_acid\",\"residual_sugar\",\"chlorides\",\"free_sulfur_dioxide\",\"total_sulfur_dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\"]","widget":"variables","title":"Input Columns","description":"Input column of type - all numeric, boolean and vector","datatypes":["integer","long","double","float","vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCol","value":"feature_v","widget":"textfield","title":"Output Column","description":"Output column name","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"5","name":"Split","description":"This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows and the other containing the remaining 30%.","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeSplit","x":"554.25px","y":"379px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"fraction1","value":".6","widget":"textfield","title":"Fraction 1","description":"Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"6","name":"MultiLayerPerceptron","description":"It supports creation of full connected neural network.","details":"","examples":"","type":"ml-estimator","nodeClass":"fire.nodes.ml.NodeMultilayerPerceptron","x":"762.25px","y":"379px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"featuresCol","value":"feature_v","widget":"variable","title":"Features Column","description":"Features column of type vectorUDT for model fitting","datatypes":["vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"labelCol","value":"quality_lable","widget":"variable","title":"Label Column","description":"The label column for model fitting","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"predictionCol","value":"","widget":"textfield","title":"Prediction Column","description":"The prediction column created during model scoring.","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"layers","value":"11, 5, 4, 3","widget":"textfield","title":"Layers - comma separated list of integers","description":"The integer array specifying the number of activation units in each layer","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxIter","value":"100","widget":"textfield","title":"Max number of iterations","description":"Number of iterations to train the Neural network","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"blockSize","value":"128","widget":"textfield","title":"Block Size","description":"Block size","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"seed","value":"1234","widget":"textfield","title":"Seed","description":"The initial seed to initialise the neural network.","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"tol","value":"1e-6","widget":"textfield","title":"Tol","description":"","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"solver","value":"l-bfgs","widget":"textfield","title":"Solver","description":"solver","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"stepSize","value":"0.03","widget":"textfield","title":"Step Size","description":"Step size","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"7","name":"Predict","description":"Predict node takes in a DataFrame and Model and makes predictions","details":"","examples":"","type":"ml-predict","nodeClass":"fire.nodes.ml.NodePredict","x":"690.25px","y":"561px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"8","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"697.25px","y":"729px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"9","name":"MulticlassClassificationEvaluator","description":"Evaluator for multiclass classification, which expects two input columns: score and label.","details":"Evaluator for multiclass classification, which expects two input columns: score and label.\u003cbr\u003e\n\u003cbr\u003e\nMore at Spark MLlib/ML docs page :\u003ca href\u003d\"https://spark.apache.org/docs/1.6.0/mllib-evaluation-metrics.html#multiclass-classification\" target\u003d\"_blank\"\u003espark.apache.org/docs/1.6.0/mllib-evaluation-metrics.html#multiclass-classification\u003c/a\u003e\u003cbr\u003e","examples":"","type":"ml-evaluator","nodeClass":"fire.nodes.ml.NodeMulticlassClassificationEvaluator","x":"413.25px","y":"570px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"labelCol","value":"quality_lable","widget":"variable","title":"Label Column","description":"The label column for model fitting.","datatypes":["double"],"required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"predictionCol","value":"prediction","widget":"variable","title":"Prediction Column","description":"The prediction column.","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"metricName","value":"accuracy","widget":"array","title":"Metric Name","description":"The metric used in evaluation.","optionsArray":["f1","accuracy","weightedPrecision","weightedRecall"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"10","name":"StickyNote","description":"Allows capturing Notes on the Workflow","details":"","examples":"","type":"sticky","nodeClass":"fire.nodes.doc.NodeStickyNote","x":"35px","y":"0px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"bgColor","value":"#f8f9fa","widget":"textfield","title":"Bg Color","description":"Background of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"width","value":"966px","widget":"textfield","title":"Width","description":"Width of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"height","value":"283px","widget":"textfield","title":"Height","description":"Height of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"comment","value":"\u003cp\u003eA feedforward neural network is an artificial neural network wherein connections between the units do not form a cycle. As such, it is different from recurrent neural networks.\u003c/p\u003e\u003cp\u003eThe feedforward neural network was the first and simplest type of artificial neural network devised. In this network, the information moves in only one direction, forward, from the input nodes, through the hidden nodes (if any) and to the output nodes. There are no cycles or loops in the network.\u003c/p\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style\u003d\"color: rgb(29, 31, 34);\"\u003eMultilayer perceptron classifier (MLPC) is a classifier based on the\u0026nbsp;\u003c/span\u003e\u003ca href\u003d\"https://en.wikipedia.org/wiki/Feedforward_neural_network\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\" style\u003d\"color: rgb(0, 136, 204); background-color: rgb(255, 255, 255);\"\u003efeedforward artificial neural network\u003c/a\u003e\u003cspan style\u003d\"color: rgb(29, 31, 34);\"\u003e. MLPC consists of multiple layers of nodes. Each layer is fully connected to the next layer in the network. Nodes in the input layer represent the input data.\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003eThe number of nodes\u0026nbsp;\u003ccode style\u003d\"color: inherit;\"\u003eN \u003c/code\u003e in the output layer corresponds to the number of classes.\u003c/p\u003e\u003cp\u003eMLPC employs backpropagation for learning the model. We use the logistic loss function for optimization and L-BFGS as an optimization routine.\u003c/p\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSpecify layers for the neural network:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u0026nbsp;Input layer of size 11 (features), two intermediate of size 5 and 4 and output of size 3 (classes).\u003c/p\u003e","widget":"textarea_rich","title":"Comment","description":"Comments for the Workflow","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"11","name":"SQL","description":"This node runs the given SQL on the incoming DataFrame","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeSQL","x":"210.25px","y":"376px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"tempTable","value":"fire_temp_table","widget":"textfield","title":"Temp Table","description":"Temp Table Name to be used","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sql","value":"select fixed_acidity, volatile_acidity,\tcitric_acid,\tresidual_sugar,\tchlorides,free_sulfur_dioxide,\ttotal_sulfur_dioxide,\t\n       density,\tpH,\tsulphates,\talcohol,\n       CASE WHEN (quality \u003e\u003d 0 and quality \u003c\u003d4) THEN 0.0\n            WHEN (quality \u003e 4 and quality \u003c\u003d 6) THEN 1.0\n            ELSE 2.0 END AS  quality_lable from fire_temp_table\n                    ","widget":"textarea_large","type":"sql","title":"SQL","description":"SQL to be run","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"schema","value":"","widget":"tab","title":"Schema","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"fixed_acidity\",\"volatile_acidity\",\"citric_acid\",\"residual_sugar\",\"chlorides\",\"free_sulfur_dioxide\",\"total_sulfur_dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality_lable\"]","widget":"schema_col_names","title":"Output Column Names","description":"Name of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\"]","widget":"schema_col_types","title":"Output Column Types","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Output Column Formats","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"}],"edges":[{"source":"3","target":"5","id":1},{"source":"5","target":"6","id":2},{"source":"6","target":"7","id":3},{"source":"5","target":"7","id":4},{"source":"7","target":"8","id":5},{"source":"7","target":"9","id":6},{"source":"1","target":"11","id":7},{"source":"11","target":"3","id":8}],"dataSetDetails":[],"engine":"scala"}