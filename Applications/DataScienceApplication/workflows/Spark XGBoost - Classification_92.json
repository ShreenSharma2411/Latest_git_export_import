{"name":"Spark XGBoost - Classification","uuid":"15d599df-b1a8-4281-922c-789c9ca1c3c8","category":"-","nodes":[{"id":"1","name":"ReadCSV","description":"It reads in CSV files and creates a DataFrame from it","details":"","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetCSV","x":"15px","y":"267px","hint":"Whenever the file is changed, Refresh the Schema","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/iris.data.txt","widget":"textfield","title":"Path","description":"Path of the Text file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"separator","value":",","widget":"textfield","title":"Separator","description":"CSV Separator","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"false","widget":"array","title":"Header","description":"Does the file have a header row","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"dropMalformed","value":"false","widget":"array","title":"Drop Malformed","description":"Whether to drop Malformed records or error","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"sepal_length\",\"sepal_width\",\"petal_length\",\"petal_width\",\"class\"]","widget":"schema_col_names","title":"Column Names for the CSV","description":"New Output Columns of the SQL","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"STRING\"]","widget":"schema_col_types","title":"Column Types for the CSV","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Column Formats for the CSV","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"2","name":"StringIndexer","description":"StringIndexer encodes a string column of labels to a column of label indices","details":"","examples":"","type":"ml-transformer","nodeClass":"fire.nodes.ml.NodeStringIndexer","x":"193px","y":"270px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"handleInvalid","value":"error","widget":"array","title":"Handle Invalid","description":"Invalid entries to be skipped or thrown error","optionsArray":["skip","error"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"class\"]","widget":"variables_list_select","title":"Input Columns","description":"Input columns for encoding","datatypes":["string"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCols","value":"[\"class_index\"]","widget":"variables_list_textfield","title":"Output Columns","description":"Output columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"3","name":"VectorAssembler","description":"Merges multiple columns into a vector column","details":"","examples":"","type":"ml-transformer","nodeClass":"fire.nodes.ml.NodeVectorAssembler","x":"369px","y":"261px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"sepal_length\",\"sepal_width\",\"petal_length\",\"petal_width\"]","widget":"variables","title":"Input Columns","description":"Input column of type - all numeric, boolean and vector","datatypes":["integer","long","double","float","vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCol","value":"features","widget":"textfield","title":"Output Column","description":"Output column name","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"4","name":"Split","description":"This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows and the other containing the remaining 30%.","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeSplit","x":"578px","y":"250px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"fraction1","value":".8","widget":"textfield","title":"Fraction 1","description":"Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"5","name":"XGBoostClassifier","description":"","details":"","examples":"","type":"ml-estimator","nodeClass":"fire.nodes.ml.NodeXGBoostClassifier","x":"815px","y":"219px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"featuresCol","value":"features","widget":"variable","title":"Features Column","description":"Features column of type vectorUDT for model fitting","datatypes":["vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"labelCol","value":"class_index","widget":"variable","title":"Label Column","description":"The label column for model fitting","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"predictionCol","value":"","widget":"textfield","title":"Prediction Column","description":"The prediction column created during model scoring.","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"numClass","value":"3","widget":"textfield","title":"Num Class","description":"","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxDepth","value":"6","widget":"textfield","title":"Max Depth","description":"The Maximum depth of a tree","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxBins","value":"32","widget":"textfield","title":"Max Bins","description":"The maximum number of bins used for discretizing continuous features.Must be \u003e\u003d 2 and \u003e\u003d number of categories in any categorical feature.","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxLeaves","value":"32","widget":"textfield","title":"Max Leaves","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"numRound","value":"100","widget":"textfield","title":"Num Round","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"numWorkers","value":"1","widget":"textfield","title":"Num Workers","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"objective","value":"multi:softprob","widget":"array","title":"Objective","description":"","optionsArray":["multi:softprob","multi:softmax","reg:logistic","binary:logistic","binary:hinge"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"eta","value":"0.3","widget":"textfield","title":"Eta","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"regLambda","value":"1","widget":"textfield","title":"Reg Lambda","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"regAlpha","value":"0","widget":"textfield","title":"Reg Alpha","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"subsample","value":"1","widget":"textfield","title":"Subsample","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sampleType","value":"uniform","widget":"array","title":"SampleType","description":"","optionsArray":["uniform","gradient_based"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"treeMethod","value":"auto","widget":"array","title":"TreeMethod","description":"","optionsArray":["auto","exact","approx","hist","gpu_hist"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"useExternalMemory","value":"false","widget":"array","title":"UseExternalMemory","description":"","datatypes":["boolean"],"optionsArray":["false","true"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"seed","value":"0","widget":"textfield","title":"Seed","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"baseScore","value":"0.5","widget":"textfield","title":"Base Score","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"minChildWeight","value":"1","widget":"textfield","title":"Min Child Weight","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colsampleBylevel","value":"1","widget":"textfield","title":"ColSampleByLevel","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colsampleBytree","value":"1","widget":"textfield","title":"ColSampleByTree","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"minSplitLoss","value":"0","widget":"textfield","title":"MinSplitLoss","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxDeltaStep","value":"0","widget":"textfield","title":"MaxDeltaStep","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sketchEps","value":"0.03","widget":"textfield","title":"SketchEps","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"scalePosWeight","value":"0.3","widget":"textfield","title":"ScalePosWeight","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"growPlicy","value":"depthwise","widget":"array","title":"GrowPlicy","description":"","optionsArray":["depthwise","lossguide"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"normalizeType","value":"tree","widget":"array","title":"NormalizeType","description":"","optionsArray":["tree","forest"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"skipDrop","value":"0.0","widget":"textfield","title":"SkipDrop","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"rateDrop","value":"0.0","widget":"textfield","title":"RateDrop","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"6","name":"Predict","description":"Predict node takes in a DataFrame and Model and makes predictions","details":"","examples":"","type":"ml-predict","nodeClass":"fire.nodes.ml.NodePredict","x":"674px","y":"455px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"7","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"456px","y":"454px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"8","name":"Spark ML Model Save","description":"This node saves the ML model generated at the specified path","details":"","examples":"","type":"ml-modelsave","nodeClass":"fire.nodes.ml.NodeModelSave","x":"867px","y":"438px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"modelsavepath","widget":"textfield","title":"Path","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"overwrite","value":"true","widget":"boolean","title":"Overwrite Output","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"9","name":"StickyNote","description":"Allows capturing Notes on the Workflow","details":"","examples":"","type":"sticky","nodeClass":"fire.nodes.doc.NodeStickyNote","x":"12px","y":"26px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"bgColor","value":"gray","widget":"textfield","title":"Bg Color","description":"Background of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"width","value":"502px","widget":"textfield","title":"Width","description":"Width of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"height","value":"217px","widget":"textfield","title":"Height","description":"Height of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"comment","value":"\u003ch1\u003eXGBoost4J-Spark: Classification\u003c/h1\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong style\u003d\"color: rgb(51, 51, 51);\"\u003eXGBoost4J-Spark\u003c/strong\u003e\u003cspan style\u003d\"color: rgb(51, 51, 51);\"\u003e\u0026nbsp;is a project aiming to seamlessly integrate XGBoost and Apache Spark by fitting XGBoost to Apache Spark’s MLLIB framework\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003eDetails: \u003ca href\u003d\"https://xgboost.readthedocs.io/en/latest/jvm/xgboost4j_spark_tutorial.html\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\"\u003ehttps://xgboost.readthedocs.io/en/latest/jvm/xgboost4j_spark_tutorial.html\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cbr\u003e\u003c/p\u003e\u003cp\u003eIris Dataset: \u003ca href\u003d\"https://archive.ics.uci.edu/ml/datasets/iris\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\"\u003ehttps://archive.ics.uci.edu/ml/datasets/iris\u003c/a\u003e\u003c/p\u003e","widget":"textarea_rich","title":"Comment","description":"Comments for the Workflow","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"}],"edges":[{"source":"1","target":"2","id":1},{"source":"2","target":"3","id":2},{"source":"3","target":"4","id":3},{"source":"4","target":"5","id":4},{"source":"6","target":"7","id":5},{"source":"4","target":"6","id":6},{"source":"5","target":"6","id":7},{"source":"5","target":"8","id":8}],"dataSetDetails":[],"engine":"scala"}