{"name":"Spark XGBoost - Regression","uuid":"ab68fe34-e8f9-4a00-8fcb-dcaab4e701d9","category":"-","nodes":[{"id":"1","name":"ReadCSV","description":"It reads in CSV files and creates a DataFrame from it","details":"","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetCSV","x":"24px","y":"154px","hint":"Whenever the file is changed, Refresh the Schema","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/house_price_prediction/kc_house_data.csv","widget":"textfield","title":"Path","description":"Path of the Text file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"separator","value":"\\t","widget":"textfield","title":"Separator","description":"CSV Separator","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"true","widget":"array","title":"Header","description":"Does the file have a header row","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"dropMalformed","value":"false","widget":"array","title":"Drop Malformed","description":"Whether to drop Malformed records or error","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"id\",\"date\",\"price\",\"bedrooms\",\"bathrooms\",\"sqft_living\",\"sqft_lot\",\"floors\",\"waterfront\",\"view\",\"condition\",\"grade\",\"sqft_above\",\"sqft_basement\",\"yr_built\",\"yr_renovated\",\"zipcode\",\"lat\",\"long\",\"sqft_living15\",\"sqft_lot15\"]","widget":"schema_col_names","title":"Column Names for the CSV","description":"New Output Columns of the SQL","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"STRING\",\"DOUBLE\",\"INTEGER\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"INTEGER\"]","widget":"schema_col_types","title":"Column Types for the CSV","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Column Formats for the CSV","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"2","name":"MathFunctions","description":"This node performs specified math function on a row","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeMathFuntions","x":"204px","y":"149px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCol","value":"bedrooms","widget":"variable","title":"Input Column Name","description":"input column name","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"mathFunction","value":"pow","widget":"array","title":"Math Function","description":"Math Function Name","optionsArray":["log","sqrt","pow","exp","round"],"required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCol","value":"bedrooms_pow","widget":"textfield","title":"Output Column","description":"Output Column Name","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"scale","value":"","widget":"textfield","title":"Scale","description":"Scale to be used when applying the Math Function","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"3","name":"MathFunctions","description":"This node performs specified math function on a row","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeMathFuntions","x":"375px","y":"154px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCol","value":"sqft_living","widget":"variable","title":"Input Column Name","description":"input column name","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"mathFunction","value":"log","widget":"array","title":"Math Function","description":"Math Function Name","optionsArray":["log","sqrt","pow","exp","round"],"required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCol","value":"sqft_living_log","widget":"textfield","title":"Output Column","description":"Output Column Name","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"scale","value":"2","widget":"textfield","title":"Scale","description":"Scale to be used when applying the Math Function","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"4","name":"SQL","description":"This node runs the given SQL on the incoming DataFrame","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeSQL","x":"566px","y":"157px","hint":"Whenever the table is changed, go to Schema tab and Refresh the Schema","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"tempTable","value":"fire_temp_table","widget":"textfield","title":"Temp Table","description":"Temp Table Name to be used","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sql","value":"select a.*, (a.bedrooms*a.bathrooms) as bedrooms_bathrooms from fire_temp_table a","widget":"textarea_large","type":"sql","title":"SQL","description":"SQL to be run","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"schema","value":"","widget":"tab","title":"Schema","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"id\",\"date\",\"price\",\"bedrooms\",\"bathrooms\",\"sqft_living\",\"sqft_lot\",\"floors\",\"waterfront\",\"view\",\"condition\",\"grade\",\"sqft_above\",\"sqft_basement\",\"yr_built\",\"yr_renovated\",\"zipcode\",\"lat\",\"long\",\"sqft_living15\",\"sqft_lot15\",\"bedrooms_pow\",\" sqft_living_log\",\"bedrooms_bathrooms\"]","widget":"schema_col_names","title":"Output Column Names","description":"Name of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"STRING\",\"DOUBLE\",\"INTEGER\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"INTEGER\",\"INTEGER\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\"]","widget":"schema_col_types","title":"Output Column Types","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Output Column Formats","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"5","name":"VectorAssembler","description":"Merges multiple columns into a vector column","details":"","examples":"","type":"ml-transformer","nodeClass":"fire.nodes.ml.NodeVectorAssembler","x":"787px","y":"157px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"floors\",\"waterfront\",\"view\",\"condition\",\"yr_built\",\"yr_renovated\",\"zipcode\",\"bedrooms_pow\",\"sqft_living_log\",\"bedrooms_bathrooms\"]","widget":"variables","title":"Input Columns","description":"Input column of type - all numeric, boolean and vector","datatypes":["integer","long","double","float","vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputCol","value":"features","widget":"textfield","title":"Output Column","description":"Output column name","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"6","name":"Split","description":"This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows and the other containing the remaining 30%.","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeSplit","x":"804px","y":"319px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"fraction1","value":".8","widget":"textfield","title":"Fraction 1","description":"Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.","required":true,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"7","name":"XGBoostRegressor","description":"","details":"","examples":"","type":"ml-estimator","nodeClass":"fire.nodes.ml.NodeXGBoostRegressor","x":"482px","y":"318px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"featuresCol","value":"features","widget":"variable","title":"Features Column","description":"Features column of type vectorUDT for model fitting","datatypes":["vectorudt"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"labelCol","value":"price","widget":"variable","title":"Label Column","description":"The label column for model fitting","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"predictionCol","value":"","widget":"textfield","title":"Prediction Column","description":"The prediction column created during model scoring.","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxDepth","value":"6","widget":"textfield","title":"Max Depth","description":"The Maximum depth of a tree","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxBins","value":"10","widget":"textfield","title":"Max Bins","description":"The maximum number of bins used for discretizing continuous features.Must be \u003e\u003d 2 and \u003e\u003d number of categories in any categorical feature.","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxLeaves","value":"5","widget":"textfield","title":"Max Leaves","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"numRound","value":"10","widget":"textfield","title":"Num Round","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"numWorkers","value":"1","widget":"textfield","title":"Num Workers","description":"","datatypes":["integer"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"objective","value":"reg:linear","widget":"array","title":"Objective","description":"","optionsArray":["reg:linear","reg:gamma","reg:tweedie"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"eta","value":"0.3","widget":"textfield","title":"Eta","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"regLambda","value":"1","widget":"textfield","title":"Reg Lambda","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"regAlpha","value":"0","widget":"textfield","title":"Reg Alpha","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"subsample","value":"1","widget":"textfield","title":"Subsample","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sampleType","value":"uniform","widget":"array","title":"SampleType","description":"","optionsArray":["uniform","gradient_based"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"treeMethod","value":"auto","widget":"array","title":"TreeMethod","description":"","optionsArray":["auto","exact","approx","hist","gpu_hist"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"useExternalMemory","value":"false","widget":"array","title":"UseExternalMemory","description":"","datatypes":["boolean"],"optionsArray":["false","true"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"seed","value":"0","widget":"textfield","title":"Seed","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"baseScore","value":"0.5","widget":"textfield","title":"Base Score","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"minChildWeight","value":"1","widget":"textfield","title":"Min Child Weight","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colsampleBylevel","value":"1","widget":"textfield","title":"ColSampleByLevel","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colsampleBytree","value":"1","widget":"textfield","title":"ColSampleByTree","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"minSplitLoss","value":"0","widget":"textfield","title":"MinSplitLoss","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"maxDeltaStep","value":"0","widget":"textfield","title":"MaxDeltaStep","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"sketchEps","value":"0.03","widget":"textfield","title":"SketchEps","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"scalePosWeight","value":"0.3","widget":"textfield","title":"ScalePosWeight","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"growPlicy","value":"depthwise","widget":"array","title":"GrowPlicy","description":"","optionsArray":["depthwise","lossguide"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"normalizeType","value":"tree","widget":"array","title":"NormalizeType","description":"","optionsArray":["tree","forest"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"skipDrop","value":"0.0","widget":"textfield","title":"SkipDrop","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"rateDrop","value":"0.0","widget":"textfield","title":"RateDrop","description":"","datatypes":["double"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"8","name":"Predict","description":"Predict node takes in a DataFrame and Model and makes predictions","details":"","examples":"","type":"ml-predict","nodeClass":"fire.nodes.ml.NodePredict","x":"638px","y":"535px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"9","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"822px","y":"531px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"}],"edges":[{"source":"1","target":"2","id":1},{"source":"2","target":"3","id":2},{"source":"3","target":"4","id":3},{"source":"4","target":"5","id":4},{"source":"5","target":"6","id":5},{"source":"6","target":"7","id":6},{"source":"7","target":"8","id":7},{"source":"6","target":"8","id":8},{"source":"8","target":"9","id":9}],"dataSetDetails":[],"engine":"scala"}