{"name":"Imputing","uuid":"6d45768d-428d-42e8-ba00-4bf39e31a873","category":"Feature Cleaning","nodes":[{"id":"3","name":"ReadJSON","description":"Dataset Node for reading JSON files","details":"It reads in JSON files. Each JSON record has to be on a separate line for Spark to handle it correctly.\u003cbr\u003e\n\u003cbr\u003e\nThere cannot be line break within a record.\u003cbr\u003e","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetJSON","x":"206.858px","y":"214.774px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/people.json","widget":"textfield","title":"Path","description":"Path of the JSON file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"age\",\"name\"]","widget":"schema_col_names","title":"Column Name","description":"New Output Column Name","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"LONG\",\"STRING\"]","widget":"schema_col_types","title":"Column Type","description":"Data Type of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\"]","widget":"schema_col_formats","title":"Column Format","description":"Format of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"4","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"666.875px","y":"208.743px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"5","name":"ImputingWithConstant","description":"It imputes missing value with constant value. It fills missing values (None) in selected columns with given constant value for the corresponding column, in the incoming DataFrame.","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeReplaceMissingValueWithConstant","x":"434.892px","y":"211.747px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colNames","value":"[\"age\"]","widget":"variables_list_select","title":"Columns","description":"Columns to be processed for missing values","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"constants","value":"[\"20\"]","widget":"variables_list_textfield","title":"Constants","description":"Missing value will be replaced with constant","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"6","name":"ReadJSON","description":"Dataset Node for reading JSON files","details":"It reads in JSON files. Each JSON record has to be on a separate line for Spark to handle it correctly.\u003cbr\u003e\n\u003cbr\u003e\nThere cannot be line break within a record.\u003cbr\u003e","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetJSON","x":"212.917px","y":"387.951px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/people.json","widget":"textfield","title":"Path","description":"Path of the JSON file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"age\",\"name\"]","widget":"schema_col_names","title":"Column Name","description":"New Output Column Name","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"LONG\",\"STRING\"]","widget":"schema_col_types","title":"Column Type","description":"Data Type of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\"]","widget":"schema_col_formats","title":"Column Format","description":"Format of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"7","name":"ImputingWithMeanValue","description":"Imputing the continuous variables by mean.","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeReplaceMissingValueWithMean","x":"437.965px","y":"370.965px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"age\"]","widget":"variables","title":"Column Names","description":"Columns type should be continuous","datatypes":["integer","long","double","float"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"8","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"676.965px","y":"368.938px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"9","name":"ReadJSON","description":"Dataset Node for reading JSON files","details":"It reads in JSON files. Each JSON record has to be on a separate line for Spark to handle it correctly.\u003cbr\u003e\n\u003cbr\u003e\nThere cannot be line break within a record.\u003cbr\u003e","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetJSON","x":"214.826px","y":"573.976px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/people.json","widget":"textfield","title":"Path","description":"Path of the JSON file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"age\",\"name\"]","widget":"schema_col_names","title":"Column Name","description":"New Output Column Name","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"LONG\",\"STRING\"]","widget":"schema_col_types","title":"Column Type","description":"Data Type of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\"]","widget":"schema_col_formats","title":"Column Format","description":"Format of the Output Column","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"10","name":"ImputingWithMedian","description":"Imputing with median","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.ml.NodeReplaceMissingValueWithMedian","x":"441.924px","y":"572.958px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"colNames","value":"[\"age\"]","widget":"variables","title":"Input Columns","description":"Input column of type - all numeric for median impute","datatypes":["integer","long","double","float"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"11","name":"PrintNRows","description":"Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.util.NodePrintFirstNRows","x":"681.872px","y":"568.972px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"title","value":"Row Values","widget":"textfield","title":"Title","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"n","value":"10","widget":"textfield","title":"Num Rows to Print","description":"number of rows to be printed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"all"},{"id":"12","name":"StickyNote","description":"Allows capturing Notes on the Workflow","details":"","examples":"","type":"sticky","nodeClass":"fire.nodes.doc.NodeStickyNote","x":"146px","y":"15px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"bgColor","value":"gray","widget":"textfield","title":"Bg Color","description":"Background of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"width","value":"371.020834px","widget":"textfield","title":"Width","description":"Width of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"height","value":"67.020834px","widget":"textfield","title":"Height","description":"Height of note","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"comment","value":"\u003cp\u003eImpute the missing values using a variety of methods\u003c/p\u003e","widget":"textarea_rich","title":"Comment","description":"Comments for the Workflow","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"}],"edges":[{"source":"3","target":"5","id":1},{"source":"5","target":"4","id":2},{"source":"6","target":"7","id":3},{"source":"7","target":"8","id":4},{"source":"9","target":"10","id":5},{"source":"10","target":"11","id":6}],"dataSetDetails":[],"engine":"scala"}